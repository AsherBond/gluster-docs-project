This translator provides storage independent POSIX record locking
support (fcntl locking). Typically you'll want to load this on the
server side, just above the POSIX storage translator. Using this
translator you can get both advisory locking and mandatory locking
support. This also implements more locking mechanisms required for
GlusterFS itself.

`volume locks` +
`  type features/locks` +
`  subvolumes brick` +
`end-volume`

* mandatory

This option enables mandatory locking semantics on the posix locks. By
default this option is 'off'.

*Note:* Consider a file that does not have its mandatory locking bits
(+setgid, -group execution) turned on. Assume that this file is now
opened by a process on a client that has the write-behind xlator loaded.
The write-behind xlator does not cache anything for files which have
mandatory locking enabled, to avoid incoherence. Let's say that
mandatory locking is now enabled on this file through another client.
The former client will not know about this change, and write-behind may
erroneously report a write as being successful when in fact it would
fail due to the region it is writing to being locked.

There seems to be no easy way to fix this. To work around this problem,
it is recommended that you never enable the mandatory bits on a file
while it is open.
