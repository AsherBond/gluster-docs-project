[[]]
Tutorials
^^^^^^^^^

Jeff Darcy was kind enough to write up some tutorials on his blog all
about getting started with translators. See links to the four articles
below:

*
http://hekafs.org/index.php/2011/11/translator-101-class-1-setting-the-stage/[Translator
101 - Setting the Stage]
*
http://hekafs.org/index.php/2011/11/translator-101-lesson-2-init-fini-and-private-context/[Translator
101 - Init, Fini and Private Context]
*
http://hekafs.org/index.php/2011/11/translator-101-lesson-3-this-time-for-real/[Translator
101 - This Time for Real]
*
http://hekafs.org/index.php/2011/11/translator-101-lesson-4-debugging-a-translator/[Translator
101 - Debugging a Translator]

[[]]
Current Translator Status
^^^^^^^^^^^^^^^^^^^^^^^^^

Here is a list of all known translators, with their current status and
maintainers. We will gradually add pages for each translator to more
easily track and participate in their development.

[[]]
Translator Types
^^^^^^^^^^^^^^^^

Note: This list is not comprehensive and is a work in progress. This is
an attempt to offer architectural background and understanding.

Note to devs: If explanations of translator types listed here are not
correct, please update them accordingly. These are descriptions based on
best effort understanding of what has been published.

[cols=",",options="header",]
|=======================================================================
|Translator Type |Functional Purpose
|Storage]] |Lowest level translator, stores and accesses data from local
file system.

|Debug]] |Provide interface and statistics for errors and debugging.

|Cluster]] |Handle distribution and replication of data as it relates to
writing to and reading from bricks & nodes.

|Encryption]] |Extension translators for on-the-fly
encryption/decryption of stored data.

|Protocol]] |Interface translators for client / server authentication
and communications.

|Performance]] |Tuning translators to adjust for workload and I/O
profiles.

|Bindings]]* |Add extensibility, e.g. The Python interface written by
Jeff Darcy to extend API interaction with GlusterFS.

|System]]* |System access translators, e.g. Interfacing with file system
access control.

|Scheduler]] |I/O schedulers that determine how to distribute new write
operations across clustered systems.

|Features]] |Add additional features such as Quotas, Filters, Locks,
etc.
|=======================================================================

* - No dedicated context page.
