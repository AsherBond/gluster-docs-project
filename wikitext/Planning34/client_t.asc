(link:Planning34[Back to 3.4 planning page]?)

Feature

`  client_t`

1 Summary

`  Refactor server_connection_t in xlator/protocol/server to a new client_t in ` +
`  libglusterfs. The new client_t is to be a full glusterfs type, a la inode_t, ` +
`  fd_t, etc. with its own internal context_t where extension data can be ` +
`  stored.`

2 Owners

` `

3 Current status

`  Patch in gerritt for review`

4 Detailed Description

`  See patch in gerritt. New files: client_t.c, client_t.h, lock-table.c, ` +
`  lock-table.h. client_t.[ch] contains the implementation of the majority of ` +
`  the old server_connection_t functionality except for the lock-table ` +
`  functionality which has been extracted into their own files. The remainder` +
`  of the changes comprise the conversion from server_connection_t to client_t.`

5 Benefit to GlusterFS

`  In f2f discussions in BLR in January 2012 it was agreed that this is the ` +
`  prefered foundation for merging the HekaFS uidmap xlator into core gluster.`

\6. Scope

6.1. Nature of proposed change

`  modification to existing code` +
` ` `6.2. Implications on manageability `

`  None.`

6.3. Implications on presentation layer

`  None`

6.4. Implications on persistence layer

`  None`

6.5. Implications on 'GlusterFS' backend

` No change in brick's data format, layout changes`

6.6. Modification to GlusterFS metadata

` No change in extended attributes used, internal hidden files to keep the metadata...`

6.7. Implications on 'glusterd'

` No change in persistent store, configuration changes, brick-op...`

7 How To Test

` Any change in file system will be notified`

8 User Experience

`  no change in Changes in CLI, effect on User experience...`

9 Dependencies

` No Dependencies identified yet`

10 Documentation

` Open Source docs available for inoify (Also /usr/src/linux/inotify.h)`

11 Status

`  In development`

12 Comments and Discussion

` `
