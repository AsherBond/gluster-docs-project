Support Separate Front and Back End Networks

1 Summary

GlusterFS generally expects that all clients and servers use a common
set of network names and/or addresses. For many users, having a separate
network exclusively for servers is highly desirable for both performance
reasons (segregating administrative traffic and/or second-hop NFS
traffic from ongoing user I/O) and security reasons (limiting
administrative access to the private network). While such configurations
can already be created with routing/iptables trickery, full and explicit
support would be a great improvement.

2 Owners

`jdarcy@redhat.com`

3 Current status

Seeking collaboration on specific requirements and implementation
details.

4 Detailed Description

At the very least, we need to be able to define and keep track of
multiple names/addresses for the same node, one used on the back-end
network e.g. for "peer probe" and and NFS and the other used on the
front-end network by native-protocol clients. The association can be
done via the node UUID, but we still need a way for the user to specify
which name/address is to be used for which purpose.

Future enhancements could include multiple front-end (client) networks,
and network-specific access control.

5 Benefit to GlusterFS

More flexible network network topologies, potentially enhancing
performance and/or security for some deployments.

\6. Scope

6.1. Nature of proposed change

The information in /var/lib/glusterd/peers/* must be enhanced to include
multiple names/addresses per peer, plus tags for roles associated with
each address/name.

The volfile-generation code must be enhanced to generate volfiles for
each purpose - server, native client, NFS proxy, self-heal/rebalance -
using the names/addresses appropriate to that purpose.

6.2. Implications on manageability

CLI and GUI support must be added for viewing/changing the addresses
associated with each server and the roles associated with each address.

6.3. Implications on presentation layer

None. The changes in 6.1 should be transparent to users.

6.4. Implications on persistence layer

None.

6.5. Implications on 'GlusterFS' backend

None.

6.6. Modification to GlusterFS metadata

See 6.1

6.7. Implications on 'glusterd'

See 6.1

7 How To Test

Set up a physical configuration with separate front-end and back-end
networks.

Use the new CLI/GUI features to define addresses and roles split across
the two networks.

Mount a volume using each of the several volfiles that result, and
generate some traffic.

Verify that the traffic is actually on the network appropriate to that
mount type.

8 User Experience

By default, nothing changes. If and only if a user wants to set up a
more "advanced" split-network configuration, they'll have new tools
allowing them to do that without having to "step outside" to mess with
routing tables etc.

9 Dependencies

None.

10 Documentation

New documentation will be needed at both the conceptual and detail
levels, describing how (and why?) to set up a split-network
configuration.

11 Status

See 3.

12 Comments and Discussion

Feedback requested. Please jump in.
