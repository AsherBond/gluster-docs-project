Git being truly distributed, does not differentiate between a repository
and a working copy. Unlike in tla and other version control systems
where you "checkout" a working copy from a "repository", in git you
clone a repository to your local machine. There is no difference between
the original repository and the cloned repository and they are
symmetrical. It is up to the usage convention to bring about the effect
of a master repo and a local repo (cloned local copy)

The repository can cloned using:

`sh$ git clone `git://git.gluster.com/glusterfs.git[`git://git.gluster.com/glusterfs.git`]` ./glusterfs.git`

This will create gluster.git under the current working directory which
will be your 'working copy' for all practical purposes. When the master
repo is progressing with changes from other developers, your local repo
should be kept up-to-date by frequently 'pull'ing commits.

`sh$ git pull`

Note that it is the equivalent of 'tla update' for our model.

For getting release branches (which are more stable than the default
'master' branch), follow the below procedures.

`sh$ cd gluster.git` +
`sh$ git branch` +
`* master` +
`sh$ git checkout -b release-2.0 origin/release-2.0` +
`sh$ git branch` +
`  master` +
`* release-2.0` +
`sh$ git pull`
