Release cycles

'''''

- gluster@sv.gnu.org is the main repository of the glusterfs project.

- glusterfs--mainline--X.0 is where the main development of glusterfs
happens. A new branch/tag (glusterfs--mainline--X.1 or
glusterfs--mainline--Y.0) is created while introducing a significant
framework change into the codebase.

- glusterfs--release--A.B is tagged off glusterfs--mainline--X.Y when
the featureset of release version A.B is ready and stable. glusterfs-1.4
release will be tagged as glusterfs--release--1.4 from
glusterfs--mainline--3.0 when it is suitably stable with all the
features implemented. Minor releases (glusterfs-1.4.1, 1.4.2) will be
bugfixes for bugs found in the glusterfs--release--1.4 branch, and no
new features or changes will go in to this branch. Appropriate fixes
will be double committed to glusterfs--mainline--3.0 or, if possible,
tla replay'ed to the mainline.

 +
 Development Process

'''''

- Every developer will have a personal archive (on his machine) which is
mirrored on gnu.zresearch.com

----------------------------------------------------------------------------------------------------------
sh$ tla make-archive krishna@zresearch.com /home/krishna/archives
sh$ tla my-default-archive krishna@zresearch.com
sh$ tla make-archive --mirror krishna@zresearch.com sftp://krishna@gnu.zresearch.com/home/krishna/archives
----------------------------------------------------------------------------------------------------------

That will setup a local archive (krishna@zresearch.com) on your local
machine and a mirror archive (of the same name) on gnu.zresearch.com.
The mirror is a master-slave type and changes are pushed one way only.
Your local machine archive is the master copy and the gnu.zresearch.com
archive is the slow. Updating the the slave copy (after making
changes/commits to the master copy) is done by

----------------------
sh$ tla archive-mirror
----------------------

On gnu.zresearch.com, make your personal archive accessible to others
via HTTP

-----------------------------------------------------------------------
gnu.zresearch.com$ ln -s ../archives /home/krishna/public_html/archives
-----------------------------------------------------------------------

others can register your mirror and get the revisions which have been
synced to the slave by you. First your mirror archive is registered by
the other developer with

-----------------------------------------------------------------------------------------
du$ tla register-archive krishna@zresearch.com http://gnu.zresearch.com/~krishna/archives
-----------------------------------------------------------------------------------------

 +
 - every task (new feature, major bug fix, changes) will always be
performed in a branch from the mainline. For example if gowda has a task
to convert inode tables to use btrees instead of hash tables.

----------------------------------------------------------------------------------------------------
shift$ tla tag gluster@sv.gnu.org/glusterfs--mainline--3.0 gowda@zresearch.com/glusterfs--btree--1.0
shift$ tla get glusterfs--btree--1.0 glusterfs--btree--1.0
shift$ cd glusterfs--btree--1.0 && emacs && ./commit.sh
----------------------------------------------------------------------------------------------------

now update the slave copy with your commit

-------------------------
shift$ tla archive-mirror
-------------------------

If Amar has to review the work done by gowda, he would have registered
gowda's mirror via http

----------------------------------------------------------------------------------------
space$ tla register-archive gowda@zresearch.com http://gnu.zresearch.com/~gowda/archives
space$ tla get -A gowda@zresearch.com glusterfs--btree--1.0 glusterfs--btree--1.0
----------------------------------------------------------------------------------------

with the checkout of gowda's work, amar can view the the work done by
gowda by taking a diff of glusterfs--btree--1.0--patch-<latest> against
glusterfs--btree--1.0--base-0

to merge the changes to mainline, first start with your mainline
checkout

---------------------------------------------------------------------------------------------------------------
space$ tla get -A gluster@sv.gnu.org glusterfs--mainline--3.0 glusterfs--mainline--3.0 # usually already exists
space$ cd glusterfs--mainline--3.0
space$ tla star-merge gowda@zresearch.com/glusterfs--btree--1.0
space$ fix .rej conflicts
space$ make dist and perform QA on this tarball
space$ ./commit.sh
---------------------------------------------------------------------------------------------------------------

this way, commits to mainline will happen only on reviewed and QA'ed
code.
