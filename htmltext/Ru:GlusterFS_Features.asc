Возможности GlusterFS
~~~~~~~~~~~~~~~~~~~~~

* *Работа в пространстве пользователя:* Реализация GlusterFS, которая
позволяет работать в пространстве пользователя, даёт ряд преимуществ. Не
требуется никаких патчей или дополнительных модулей к ядру. Ошибки не
приводят к краху операционной системы. Вместе со многими преимуществами,
GlusterFS может работать также быстро или даже быстрее, чем файловые
системы, встроенные в ядро.

* *Стыкуемые модули:* Модульная реализация даёт GlusterFS возможность
расширяться за рамки обычной файловой системы без ущерба своей
элегантности в реализации. Почти все возможности (от опций
производительности и распределённой блокировки до репликации и составных
томов) реализованы как стыкуемые между собой модули (трансляторы).
Пользователи могут выбрать соответствующие трансляторы, подходящие для
их приложения и аппаратного обеспечения и построить из них
оптимизированную систему хранения. GlusterFS заимствовал концепцию
стыкуемой файловой системы в пространстве пользователя из
http://hurd.gnu.org[ядра GNU Hurd].

* *Нет мета-данных:* В отличе от других кластерных файловых систем,
которые выполняют параллелизацию на блочном уровне, инженеры GlusterFS
полагают, что проблема состоит в управлении томами и уровне планировщика
ввода/вывода. Это позволило возложить управление мета-данными на
конечные дисковые файловые системы. Ликвидация централизованого сервера
мета-данных дало GlusterFS значительное преимущество в маштабируемости и
надёжности.

* *Самозаживление:* Как только размер вашего тома увеличивается более
чем до 32TБайт, время выполнения fsck (утилиты проверки файловой
системы) становится большой проблемой. GlusterFS не имеет fsck. Она
прозрачно заживляет сама себя с незначительным влиянием на
производительность.

* *Конечная работа в стиле NFS:* Файлы и каталоги пользователей
сохраняются также как и на самой машине. Пользователи всегда могут
получить доступ к данным через scp или ftp (как NFS), даже без установки
GlusterFS. Эта простота даёт большую уверенность при масштабировании до
нескольких пета-байт.

* *Автоматическая репликация:* Возможность автоматической репликации
файлов (AFR) в GlusterFS позволяет реплицировать все ваши операции
ввода/вывода в реальном времени. С AFR, GlusterFS может выдерживать
отказы аппаратного обеспечения.

* *Агрегация:* Возможность Unify в GlusterFS позволяет агрегировать
несколько устройств хранения (серверов) в один большой том. Это
осуществляется с помощью распределения на файловом уровне. Политика
распределения выбирается в зависимости от планировщика ввода/выода.

* *Масштабирование составных томов:* Возможность GlusterFS работать с
составными томами (striping) даёт возможность масштабироваться до просто
огромного количества устройств хранения в отличие от подхода,
основанного на мета-данных. И даже, когда файлы, разбросаны по таким
составным томам, их легко восстановить просто соединив их части в один
файл с помощью dd.

* *Подключаемые планировщики ввода/вывода:* Пользователи могут выбирать
разные планировщики ввода/вывода в зависимости от требований, которые
выдвигают приложения. Доступными планировщиками ввода/вывода являются:
самонастраивающийся adaptive-least-usage, round robin,
non-uniform-memory-access, ramdom, wild-card. Довольно легко разработать
другие специальные планировщики.

* *Подключаемый транспорт:* GlusterFS поддерживает сети, основанные на
TCP/IP, такие как Fast Ethernet, GigE и 10 GigE, а также RDMA,
основанные на Infiniband. Доступными опциями являются: TCP, IB-verbs,
Unix-IPC.

* *Подключаемая авторизация:* GlusterFS поддерживает авторизацию,
основанную на IP и на вводе пользователя/пароля. Возможно расширить
интерфейс авторизации для поддержки авторизации через MySQL или LDAP.

* *Распределённая блокировка:* Трансоятор Locks в GlusterFS поддерживает
все возможности распределённой блокировки POSIX.

* *Distributed BDB:* Модуль BerkeleyDB позволяет GlusterFS очень
эффективно хранить маленькие файлы. Миллиарды маленьких файлов могут
быть упакованы в небольшие BDB файлы, разбросанные по нескольким
устройствам хранения. Пользователю просто предоставляется
POSIX-совместимый интерфейс для просмотра файловой системы.

* *Встраиваемость:* Вся файловая система GlusterFS может быть встроена в
веб-ферму Apache или Lighttpd. Это позволяет веб-запросам обходить ядро
и получать прямой доступ к данным. Особенно, если у вас Infiniband,
Apache или Lighttpd даже не будут знать, что выполняют RDMA ввод/вывод.

* *Модули производительности:* Для оптимизации производительности вашей
системы хранения достуно несколько модулей производительности, такие как
IO-Cache, IO-Threads, Read-Ahead и Write-Behind.

* *Гибкое управление томами:* Каждая возможность в GlusterFS (например,
сеть, планировщик, кэширование на диск) представляется как логический
том. Пользователи могут состыковывать их друг с другом в любом нужном
порядке, чтобы построить специальную, оптимизированную среду хранения.

* *Восстановление удалённого:* Модуль Trashcan предоставляет возможность
восстановления с помощью прозрачного перемещения всех
удалённых/изменённых файлов в каталог /trash.

* *Шифрование:* Теперь, GlusterFS поддерживает только модуль шифрования
rot-13. Rot-13 это до смешного слабый алгоритм шифрования. Основная цель
данного модуля состоит в том, чтобы сделать задел на будущую разработку.

* *Трассировка:* Ввод/вывод осуществляемый приложением, может быть
отслежен вызов за вызовом с помощью включения транслятора trace в
специальное место файловой системы. Это очень полезно для отладки.

