Contents
~~~~~~~~

* link:#Feature[1 Feature]
* link:#Summary[2 Summary]
* link:#Owners[3 Owners]
* link:#Current_status[4 Current status]
* link:#Detailed_Description[5 Detailed Description]
* link:#Benefit_to_GlusterFS[6 Benefit to GlusterFS]
* link:#Scope[7 Scope]
** link:#Nature_of_proposed_change[7.1 Nature of proposed change]
** link:#Implications_on_manageability[7.2 Implications on
manageability]
** link:#Implications_on_presentation_layer[7.3 Implications on
presentation layer]
** link:#Implications_on_persistence_layer[7.4 Implications on
persistence layer]
** link:#Implications_on_.27GlusterFS.27_backend[7.5 Implications on
'GlusterFS' backend]
** link:#Modification_to_GlusterFS_metadata[7.6 Modification to
GlusterFS metadata]
** link:#Implications_on_.27glusterd.27[7.7 Implications on 'glusterd']
* link:#How_To_Test[8 How To Test]
* link:#User_Experience[9 User Experience]
* link:#Dependencies[10 Dependencies]
* link:#Documentation[11 Documentation]
* link:#Status[12 Status]
* link:#Comments_and_Discussion[13 Comments and Discussion]

Feature
~~~~~~~

-----------------------------------
 Write Once Read Many (WORM) volume
-----------------------------------

Summary
~~~~~~~

-------------------------------------------------------------------------------------------------
 This feature will enable user to create a WORM (write once, read many) volume using gluster CLI.
-------------------------------------------------------------------------------------------------

Owners
~~~~~~

----------------------------------
 Amar Tumballi <amarts@redhat.com>
 Shishir Gowda <sgowda@redhat.com>
----------------------------------

Current status
~~~~~~~~~~~~~~

-----------------------------------------------------------------------------------
 We currently have gluster cli support for converting a given volume to WORM volume
-----------------------------------------------------------------------------------

Detailed Description
~~~~~~~~~~~~~~~~~~~~

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 WORM (write once, read many) is a desired feature for users who want to store data such as 'log files', and such like, where the data is not allowed to get modified.
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Currently, GlusterFS codebase has an implementation of WORM, but it is not usable by users as there is no option to add that volume into our volume specification files through CLI. One of the easiest way to implement it without disturbing much of the code in glusterfs is using 'volume set' interface.
 So, we are providing a new key 'features.worm' which takes boolean values (enable/disable) for volume set.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------
 With command like below, users can achieve WORM functionality on volume.
-------------------------------------------------------------------------

---------------------------------------------------------------------------------
 bash# gluster volume create test-volume test-node1:/testdir test-node2:/testdir 
 volume create successful.
 bash# gluster volume set test-volume feature.worm enable
 volume set successful.
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------
 Internally, the volume set command with 'feature.worm' key will add 'features/worm' translator in the brick's volume file.
---------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------
 This change would be refelected on a subsequent restart of the volume
----------------------------------------------------------------------

Benefit to GlusterFS
~~~~~~~~~~~~~~~~~~~~

----------------------------------------------
 More real life use cases solved by GlusterFS.
----------------------------------------------

 +

Scope
~~~~~

Nature of proposed change
^^^^^^^^^^^^^^^^^^^^^^^^^

--------------------------------------------------------------------------------------------
  * VME table to get one more entry for 'features.worm' (ref: glusterd-volgen.c)
 * handle the 'features.worm' key something similiar to 'features.read-only' in the codebase
 
--------------------------------------------------------------------------------------------

Implications on manageability
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

---------------------------------------------------------------------------------
  * new gluster 'volume set' command to enable/disable 'WORM' feature on a volume
---------------------------------------------------------------------------------

Implications on presentation layer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

------
  NONE
------

 +

Implications on persistence layer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

------
  NONE
------

Implications on 'GlusterFS' backend
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-----
 NONE
-----

 +

Modification to GlusterFS metadata
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-----
 NONE
-----

 +

Implications on 'glusterd'
^^^^^^^^^^^^^^^^^^^^^^^^^^

------------------------------------------------------------------------------------------------------------------
 volume information will have one more key 'worm=1' (or 'worm=0') to indicate if the files are enabled or disabled
------------------------------------------------------------------------------------------------------------------

How To Test
~~~~~~~~~~~

------------------------------------------------------------------------------------------------
 Use the volume set command on a volume and see if the volume is actually turned into WORM type.
------------------------------------------------------------------------------------------------

User Experience
~~~~~~~~~~~~~~~

-----------------------------------------------------------
 User gets a new option to enable/disable the WORM feature.
-----------------------------------------------------------

With a volume converted to WORM, the changes are as follows:

---------------------------------------------------------
 * Reads are handled normally
 * Only files opened with O_APPEND flag will be supported
 * Truncation, Deletion wont be supported
---------------------------------------------------------

Dependencies
~~~~~~~~~~~~

---------------------
 Dependencies, if any
---------------------

Documentation
~~~~~~~~~~~~~

------------------------------
 Documentation for the feature
------------------------------

Status
~~~~~~

----------
 Completed
----------

 +

Comments and Discussion
~~~~~~~~~~~~~~~~~~~~~~~

------------
 Follow here
------------
