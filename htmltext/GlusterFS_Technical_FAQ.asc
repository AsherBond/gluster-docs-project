Contents
~~~~~~~~

*
link:#Does_.27ls.27_query_all_servers_in_parallel_to_deliver_the_logical_summation_of_the_namespace.3F[1
Does 'ls' query all servers in parallel to deliver the logical summation
of the namespace?]
* link:#.27ls.27_performance[2 'ls' performance]
* link:#Where_is_the_meta_data_stored.3F[3 Where is the meta data
stored?]
* link:#Does_each_client_maintain_a_cache_of_the_summed_namespace.3F[4
Does each client maintain a cache of the summed namespace?]
*
link:#How_do_I_know_which_order_the_translators_should_be_implemented.3F[5
How do I know which order the translators should be implemented?]
* link:#How_is_locking_handled.3F[6 How is locking handled?]
* link:#Do_clients_communicate_with_each_other.3F[7 Do clients
communicate with each other?]
* link:#Do_servers_communicate_with_each_other.3F[8 Do servers
communicate with each other?]
* link:#What_happens_if_a_GlusterFS_brick_crashes.3F[9 What happens if a
GlusterFS brick crashes?]
* link:#What_about_deletion_self.2Fauto_healing.3F[10 What about
deletion self/auto healing?]
*
link:#Can_I_add_or_remove_a_storage_node_while_GlusterFS_is_online.3F[11
Can I add or remove a storage node while GlusterFS is online?]
*
link:#Can_I_directly_access_the_data_on_the_underlying_storage_volumes.3F[12
Can I directly access the data on the underlying storage volumes?]
* link:#What_happens_in_case_of_hardware_or_GlusterFS_crash.3F[13 What
happens in case of hardware or GlusterFS crash?]
*
link:#Metadata_Storage_-_When_using_striping_.28unify.29.2C_how_does_the_file_data_get_split.3F[14
Metadata Storage - When using striping (unify), how does the file data
get split?]
*
link:#Metadata_Storage_-_When_using_striping_.28unify.29.2C_how.2Fwhere_is_the_metadata_kept.3F[15
Metadata Storage - When using striping (unify), how/where is the
metadata kept?]
* link:#How_to_make_GlusterFS_secure.3F[16 How to make GlusterFS
secure?]
* link:#How_do_I_mount.2Fumount_GlusterFS.3F[17 How do I mount/umount
GlusterFS?]
*
link:#Do_I_need_to_synchronize_UIDs_and_GIDs_on_all_servers_using_GlusterFS_.3F[18
Do I need to synchronize UIDs and GIDs on all servers using GlusterFS ?]
*
link:#Do_I_need_to_synchronize_time_on_all_servers_using_GlusterFS_.3F[19
Do I need to synchronize time on all servers using GlusterFS ?]
*
link:#How_do_I_add_a_new_node_to_an_already_running_cluster_of_GlusterFS[20
How do I add a new node to an already running cluster of GlusterFS]
*
link:#How_do_I_add_a_new_AFR_namespace_brick_to_an_already_running_cluster.3F[21
How do I add a new AFR namespace brick to an already running cluster?]
* link:#Loop_mounting_image_files_stored_in_GlusterFS_file_system[22
Loop mounting image files stored in GlusterFS file system]
* link:#How_do_you_allow_more_than_one_IP_in_auth.addr.3F[23 How do you
allow more than one IP in auth.addr?]
* link:#Stripe_behavior_not_working_as_expected[24 Stripe behavior not
working as expected]
* link:#Duplicate_volume_name_in_volfile[25 Duplicate volume name in
volfile]
* link:#File_location[26 File location]
* link:#What_is_GlusterFS_scheduler.3F[27 What is GlusterFS scheduler?]
* link:#Servers_with_Multiple_Purposes[28 Servers with Multiple
Purposes]
*
link:#How_can_I_improve_the_performance_of_reading_many_small_files.3F[29
How can I improve the performance of reading many small files?]

Does 'ls' query all servers in parallel to deliver the logical summation
of the namespace?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes, As GlusterFS doesn't have a centralized metadata, it queries all
the servers when a 'ls' command is issued.

'ls' performance
~~~~~~~~~~~~~~~~

Q: How many files per second can you stat with "ls" and how many stats
per second if I am querying on last-modified state?

A: Lets see the two possible cases of _'ls'_.

------
# "ls"
------

"ls" issues a _opendir()_, multiple _readdir()_ and _closedir()_. Just
doing "ls" doesn't trigger _stat()_ call. But, gets the directory
entries.

---------
# "ls -l"
---------

"-l" options triggers _stat()_ call for each entry obtained by
_readdir()_.

Now, In GlusterFS the performance depends on what translators are used
to get the exact number of stat calls which can be made. If we have to
send stat() call in AFR, its sent to only first child, and is very fast,
in unify it will be sent only to namespace and should be fast, in dht
(or hash), client knows where to find the file hence it should be fast
too.

Where is the meta data stored?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There is no special metadata storage concept in GlusterFS. The metadata
is stored with the file data itself in its backend disk (very much like
ext3/ZFS/xfs etc). GlusterFS doesn't manage disk/block level filesystem.
It manages backend filesystems as a whole. So, it has no need of keeping
metadata.

Does each client maintain a cache of the summed namespace?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No we do not maintain any client side cache, because it will lead to
severe cache coherency and scalability issues. Currently each
translators has its own mechanism to maintain global namespace. Unify
has separate namespace volume which is shared by all clients. DHT
distributes it depending on the name hash.

How do I know which order the translators should be implemented?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

There are no hard bound rule about places of translators. It may vary
from setup to setup. In general, posix/bdb, locks, io-threads should be
defined as a pack for required behavior and performance. write-behind
and read-ahead makes more sense at client side. io-cache can be loaded
on both client and server. cluster translators can sit as per need.

How is locking handled?
~~~~~~~~~~~~~~~~~~~~~~~

File level locking is handled distributedly across the bricks using
_features/posix-locks_ translator. GlusterFS supports both fcntl() and
flock() calls.

Do clients communicate with each other?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No clients do not communicate with each other.

Do servers communicate with each other?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes, glusterd daemons communicate directly for administration purposes.

Additionally, each server re-shares the volume via nfs through a client
process. That client process connects to it's volume servers.

Finally, a rebalance also uses the client to connect to a volume's
servers to perform the rebalance.

 +

What happens if a GlusterFS brick crashes?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You treat it like any other storage server. The underlying filesystem
will run fsck and recover from crash. With journaled file system such as
Ext3 or XFS, recovery is much faster and safer. When the brick comes
back, glusterfs fixes all the changes on it by its self-heal feature.

What about deletion self/auto healing?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

With auto healing only file creation is healed. If a brick is missing
because of a disk crash re-creation of files is ok but if it's a
temporary network problem synchronizing deletion is mandatory.

See also
http://www.gluster.org/community/documentation/index.php/Gluster_3.2:_Triggering_Self-Heal_on_Replicate[Gluster
3.2: Triggering Self-Heal on Replicate].

Can I add or remove a storage node while GlusterFS is online?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dynamic volume management tools to add/remove bricks online were
released in v3.1.

Can I directly access the data on the underlying storage volumes?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you are just doing just read()/access()/stat() like operations, you
should be fine. If you are not using any new features (like
quota/geo-replication etc etc) then technically, you can modify (but
surely not rename(2) and link(2)) the data inside.

Note that this is not tested as part of gluster's release cycle and not
recommended for production use.

What happens in case of hardware or GlusterFS crash?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You don't risk any corruption. How ever if the crash happened in the
middle of your application writing data, the data in transit may be
lost. All file systems are vulnerable to such loses.

Metadata Storage - When using striping (unify), how does the file data
get split?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Individual files are never split and stored on multiple bricks, rather,
the scheduling algorithm you specify is used to determine which brick a
file is stored on.

Metadata Storage - When using striping (unify), how/where is the
metadata kept?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

As said earlier, there is no metadata in unify (in whole GlusterFS
itself). Unify keeps its namespace cache in an separate namespace
volume.

How to make GlusterFS secure?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

GlusterFS as of now supports only IP/port based authentication. You
specify a range of IP addresses separately for clients and management
nodes to allow access. Client side port is always restricted to less
than 1024 to ensure only root can perform management operations
including mount/umount. New GNU TLS (secure certificate) based
authentication is under development. We are also planning to implement
encryption translator in the upcoming release. Till then you can even
stunnel GlusterFS connections.

Here is one article about setting up
http://www.gluster.org/docs/index.php/GlusterFS_Encrypted_network[Encrypted
Network] between client and server.

How do I mount/umount GlusterFS?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Refer to
http://www.gluster.org/community/documentation/index.php?title=Mounting_a_GlusterFS_Volume&action=edit&redlink=1[Mounting
a GlusterFS Volume].

Do I need to synchronize UIDs and GIDs on all servers using GlusterFS ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

No. Only clients machines need to be synchronized, since the access
control is done on the client's side VFS layer.

Do I need to synchronize time on all servers using GlusterFS ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes. You can use NTP (Network Time Protocol) client to do this if your
hosting environment does not do this for you (for example Amazon EC2
already does this). Keeping all server time in sync is a good thing. Few
translators like io-cache which works based on mtime may not work
properly otherwise.

Simple example of NTP command:

------------------------------------
bash# /usr/sbin/ntpdate pool.ntp.org
------------------------------------

How do I add a new node to an already running cluster of GlusterFS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yes, you can add more bricks in your volume specification file and
restart GlusterFS (re-mount). Its schedulers (alu) are designed to
balance the file system data as you grow.

*_For releases after 1.3.0-pre5_*

Just add the extra node in unify's or DHT's subvolumes list, and restart
the GlusterFS, the directory structure is automatically replicated in
the new server :D The much desired self-heal property of unify solves
the burden of manually maintaining equal directory structure in all the
servers before mount.

*Note: We are planning to add on-the-fly addition of storage bricks in
our next release. The above steps will be taken care automatically.*

How do I add a new AFR namespace brick to an already running cluster?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The question is not quite clear. Right now, GlusterFS doesn't support
on-the-fly change of volfiles to add volumes. You need to edit volfile,
add afr volume, stop glusterfs process, start it with new volfile to
achieve this.

Loop mounting image files stored in GlusterFS file system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To mount one image file stored in glusterfs file system, you have to
disable the direct-io in the glusterfs mount. to do this with GlusterFS
use the following command:

-------------------------------------------------------------------------
  #glusterfs -f <your_spec_file>  --disable-direct-io-mode /<mount_path> 
-------------------------------------------------------------------------

After that you can use your glusterfs file system mounted on
/<mount_path> to store your images. If you disable direct-io you can use
glusterfs to store xen virtual machines virtual block device as files.
Xen + Live Migration works fine using the option above.

How do you allow more than one IP in auth.addr?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Q: If you can only have one auth.addr line in a config, how do you allow
127.0.0.1 as well as a 192.168.* range?

A: Make your auth.addr.<volumename>.allow look like this:

------------------------------------------------------
option auth.addr.<volumename>.allow 127.0.0.1,192.168*
------------------------------------------------------

Note the comma separated ip address patterns.

Stripe behavior not working as expected
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Q: Striping doesn't work well. I made a file of 4MB with 'option
block-size 2MB', but on my two servers the file is distributed like
this:

---------------
PC1: file = 2MB
PC2: file = 4MB
---------------

A: GlusterFS's stripe translator saves files as files in backend, but
with a filesystem holes. _'ls'_ doesn't understand the filesystem holes,
but du does. Please check the disk used by the file with the help of
_du_ command. That should show 2MB each.

Duplicate volume name in volfile
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Q: Is it possible to use the same brick name several times in the same
glusterfs-server.vol like in the example below?

-----------------------------
volume brick
   type storage/posix
   option directory /dfslarge
end-volume

volume brick
   type storage/posix
   option directory /dfssmall
end-volume
-----------------------------

A: No, volume name should be unique across the volume file. GlusterFS
process will be erroring out in this case.

File location
~~~~~~~~~~~~~

Q: For example, I have 3 servers(no ssh) in Unify mode with RR scheduler
and I've uploaded some file. How can I find out on which brick a file is
located?

A: Currently there is no mechanism to find out the files at server. This
should be made available in next releases.

What is GlusterFS scheduler?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The
http://www.gluster.org/community/documentation/index.php/Translators_v1.4#GlusterFS_Schedulers[GlusterFS
scheduler] handles load-balancing and high-availability in clustered
mode when unify translator is used. You select a scheduler of your
choice in your "unify" volume.
http://www.gluster.org/community/documentation/index.php/Translators_v1.4#GlusterFS_Schedulers[Check
this link] for more information about type of schedulers, their options,
benefits of using them etc..

Servers with Multiple Purposes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Q: Can a cluster of servers be used for multiple purposes, e.g. run
GlusterFS + Apache/PHP?

A: Dedicated servers are recommended due to security and performance
concerns. How ever there are no restrictions for GlusterFS to coexist
with other services (such as Apache or MySQL).

How can I improve the performance of reading many small files?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the NFS client. For reading many small files, i.e. PHP web serving,
the NFS client will perform much better.

That that for a write-heavy load the native client will perform better.
