'''''

Contents
~~~~~~~~

* link:#NFS[1 NFS]
** link:#Server_Volume_Specification[1.1 Server Volume Specification]
** link:#Client_Volume_Specification[1.2 Client Volume Specification]
*** link:#How_do_I_export_more_than_one_volume_.3F[1.2.1 How do I export
more than one volume ?]
** link:#Server_Volume_Specification_2[1.3 Server Volume Specification]
** link:#Client_Volume_Specification_2[1.4 Client Volume Specification]
** link:#Server_Volume_Specification_3[1.5 Server Volume Specification]
** link:#Client_Volume_Specification_3[1.6 Client Volume Specification]
** link:#server-afr.vol[1.7 server-afr.vol]
** link:#client.vol[1.8 client.vol]
** link:#command_to_run[1.9 command to run]

NFS
---

Let us start with a simple volume specification to quickly get a
functional setup. Once you are through, you can explore performance
translators such as io-cache, write-behind, read-ahead, io-threads and
so on. You can also add AFR (automatic file replication) to setup a
high-availability NFS.

Server Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------------------------------------
# file: /etc/glusterfs/glusterfs-server.vol
volume brick
  type storage/posix
  option directory /data/export
end-volume

volume server
  type protocol/server
  option transport-type tcp/server
  option auth.ip.brick.allow *
  subvolumes brick
end-volume
-------------------------------------------

Client Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------------------------------------
# file: /etc/glusterfs/glusterfs-client.vol
volume remote
  type protocol/client
  option transport-type tcp/client
  option remote-host storage.example.com
  option remote-subvolume brick
end-volume
-------------------------------------------

How do I export more than one volume ?
++++++++++++++++++++++++++++++++++++++

You may need to export more than one directory, the below spec file
example shows how you could do this with two directories, _/home/blue/_
and _/home/red/_.

------------------------------------------------------------------
$ emacs /etc/glusterfs/glusterfs-server.vol
$ cat /etc/glusterfs/glusterfs-server.vol

volume blue
 type storage/posix               # POSIX FS translator
 option directory /home/blue      # Export this directory
end-volume

volume red
 type storage/posix               # POSIX FS translator
 option directory /home/red       # Export this directory
end-volume

volume server
 type protocol/server
 option transport-type tcp/server # For TCP/IP transport
 option client-volume-filename /etc/glusterfs/glusterfs-client.vol
 subvolumes export test
 option auth.ip.blue.allow *  # Allow access to "blue" volume
 option auth.ip.red.allow *   # Allow access to "red" volume
end-volume
------------------------------------------------------------------

-------------------------------------------------------------------
$ emacs /etc/glusterfs/glusterfs-client.vol
$ cat /etc/glusterfs/glusterfs-client.vol

volume blue
 type protocol/client
 option transport-type tcp/client  # for TCP/IP transport
 option remote-host 192.168.0.1    # IP address of the remote brick
 option remote-subvolume blue      # name of the remote volume
end-volume

volume red
 type protocol/client
 option transport-type tcp/client  # for TCP/IP transport
 option remote-host 192.168.0.1    # IP address of the remote brick
 option remote-subvolume red       # name of the remote volume
end-volume
-------------------------------------------------------------------

On a client machine you can now mount a selected volume (_red_ in this
case):

-----------------------------------------------------------------------
$ glusterfs --server 192.168.0.1  /mnt/glusterfs_red/ --volume-name red
-----------------------------------------------------------------------

To mount the _blue_ volume on the same (or another) client machine:

------------------------------------------------------------------------
$ glusterfs --server 192.168.0.1 /mnt/glusterfs_blue/ --volume-name blue
------------------------------------------------------------------------

'''''

AFR

Server Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use the below volume spec on both storage1.example.com and
storage2.example.com

-------------------------------------------
# file: /etc/glusterfs/glusterfs-server.vol
volume brick
  type storage/posix
  option directory /data/export
end-volume

volume server
  type protocol/server
  option transport-type tcp/server
  option auth.ip.brick.allow *
  subvolumes brick
end-volume
-------------------------------------------

Client Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------------------------------------
# file: /etc/glusterfs/glusterfs-client.vol
volume remote1
  type protocol/client
  option transport-type tcp/client
  option remote-host storage1.example.com
  option remote-subvolume brick
end-volume

volume remote2
  type protocol/client
  option transport-type tcp/client
  option remote-host storage2.example.com
  option remote-subvolume brick
end-volume

volume mirror0
  type cluster/afr
  subvolumes remote1 remote2
end-volume
-------------------------------------------

'''''

Unify

Server Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------------------------------------
# file: /etc/glusterfs/glusterfs-server.vol
volume brick
  type storage/posix
  option directory /data/export
end-volume

volume brick-ns
  type storage/posix
  option directory /data/export-ns
end-volume

volume server
  type protocol/server
  option transport-type tcp/server
  option auth.ip.brick.allow *
  option auth.ip.brick-ns.allow *
  subvolumes brick brick-ns
end-volume
-------------------------------------------

Client Volume Specification
~~~~~~~~~~~~~~~~~~~~~~~~~~~

-------------------------------------------
# file: /etc/glusterfs/glusterfs-client.vol
volume remote1
  type protocol/client
  option transport-type tcp/client
  option remote-host storage1.example.com
  option remote-subvolume brick
end-volume

volume remote2
  type protocol/client
  option transport-type tcp/client
  option remote-host storage2.example.com
  option remote-subvolume brick
end-volume

volume remote3
  type protocol/client
  option transport-type tcp/client
  option remote-host storage3.example.com
  option remote-subvolume brick
end-volume

volume remote-ns
  type protocol/client
  option transport-type tcp/client
  option remote-host storage1.example.com
  option remote-subvolume brick-ns
end-volume

volume unify0
  type cluster/unify
  option scheduler rr # round robin
  option namespace remote-ns
  subvolumes remote1 remote2 remote3
end-volume
-------------------------------------------

'''''

Single process AFR

server-afr.vol
~~~~~~~~~~~~~~

------------------------------------
volume posix
      type storage/posix
      option directory /tmp/export
end-volume

volume brick
      type features/posix-locks
      subvolumes posix
end-volume 

volume machine01
      type protocol/client
      option transport-type tcp
      option remote-host machine01
      option remote-subvolume brick
end-volume

volume machine02
      type protocol/client
      option transport-type tcp
      option remote-host machine02
      option remote-subvolume brick
end-volume

volume afr
      type cluster/afr
      option read-subvolume home1
      subvolumes machine01 machine02
end-volume

volume server
      type protocol/server
      option transport-type tcp
      subvolumes brick afr
      option auth.addr.brick.allow *
      option auth.addr.afr.allow *
end-volume
------------------------------------

client.vol
~~~~~~~~~~

----------------------------------
volume machine01
      type protocol/client
      option transport-type tcp
      option remote-host machine01
      option remote-subvolume afr
end-volume
----------------------------------

------------------------------------
volume machine02
      type protocol/client
      option transport-type tcp
      option remote-host machine02
      option remote-subvolume afr
end-volume

volume ha
      type cluster/ha
      subvolumes machine01 machine02
end-volume
------------------------------------

command to run
~~~~~~~~~~~~~~

---------------------------------------------------------------------------------------
bash# mkdir /mnt/glusterfs
bash# mkdir -p /gluster/export # needed on server which wants to export this directory.
---------------------------------------------------------------------------------------

---------------------------------------------------------------------
machine01#  glusterfs -f /etc/glusterfs/server-afr.vol /mnt/glusterfs
machine02#  glusterfs -f /etc/glusterfs/server-afr.vol /mnt/glusterfs
---------------------------------------------------------------------

All other machines in network using these files:

-----------------------------------------------------------------
machineNN#  glusterfs -f /etc/glusterfs/client.vol /mnt/glusterfs
-----------------------------------------------------------------
