Extra features.

Contents
~~~~~~~~

* link:#Translator_features.2Flocks[1 Translator features/locks]
* link:#Translator_features.2Ffilter[2 Translator features/filter]
* link:#Translator_features.2Ftrash[3 Translator features/trash]
* link:#Translator_features.2Fpath-converter[4 Translator
features/path-converter]
* link:#Translator_features.2Fquota[5 Translator features/quota]

http://www.gluster.org/community/documentation/index.php/Translators/features/locks[Translator
features/locks]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This translator provides storage independent POSIX record locking
support (fcntl locking). Typically you'll want to load this on the
server side, just above the POSIX storage translator. Using this
translator you can get both advisory locking and mandatory locking
support. This also implements more locking mechanisms required for
GlusterFS itself.

---------------------
volume locks
  type features/locks
  subvolumes brick
end-volume
---------------------

* mandatory

This option enables mandatory locking semantics on the posix locks. By
default this option is 'off'.

 +
 *Note:* Consider a file that does not have its mandatory locking bits
(+setgid, -group execution) turned on. Assume that this file is now
opened by a process on a client that has the write-behind xlator loaded.
The write-behind xlator does not cache anything for files which have
mandatory locking enabled, to avoid incoherence. Let's say that
mandatory locking is now enabled on this file through another client.
The former client will not know about this change, and write-behind may
erroneously report a write as being successful when in fact it would
fail due to the region it is writing to being locked.

There seems to be no easy way to fix this. To work around this problem,
it is recommended that you never enable the mandatory bits on a file
while it is open.

http://www.gluster.org/community/documentation/index.php/Translators/features/filter[Translator
features/filter]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Advanced filtering translator based on user id or group id. Currently
implements root-squashing, and uid-mapping options too.

-----------------------------------------------------
volume brick-readonly
  type features/filter
  option root-squashing enable
  option translate-uid 501-1000=10000,1000-1999=10001
  subvolumes brick
end-volume
-----------------------------------------------------

 +

* *root-squashing*

Disables modify permissions for root. This option is similar to NFS root
squashing. By default this is 'off'

* *read-only*

Makes the subvolume a read-only export. All modification operations are
failed with EROFS error. By default this is 'off'

* *fixed-uid* and *fixed-gid*

Make all files and directories appear as if they are owned by the UID
and GID specified with these options

* *translate-uid* and *translate-gid*

Perform operations on behalf of another UID or GID. Multiple UIDs and
GIDs can be translated into a single UID and GID.

* *filter-uid* and *filter-gid*

Fail operations happening from the specified UID and GID with EPERM
error.

http://www.gluster.org/community/documentation/index.php/Translators/features/trash[Translator
features/trash]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This translator provides a 'libtrash' like feature (or some users may
like to call it as recyclebin). This translator is best utilized when
loaded on serverside.

-----------------------------
volume trash
  type features/trash
  option trash-dir /.trashcan
  subvolumes brick
end-volume
-----------------------------

http://www.gluster.org/community/documentation/index.php/Translators/features/path-converter[Translator
features/path-converter]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This translator enables one to convert the path internally.

http://www.gluster.org/community/documentation/index.php/Translators/features/quota[Translator
features/quota]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enables basic quota to make sure GlusterFS export does not grow beyond
certain size, or it can grow only till last 'min-free-disk-limit'
percent of the filesystem is free.

---------------------------------------------------------------------
volume quota
  type features/quota
  option min-free-disk-limit 90%  ; percent of filesystem usage limit
  option refresh-interval 300s    ; 20s is the default
  option disk-usage-limit 100G    ; usage limit in bytes
  subvolumes <x>
end-volume
---------------------------------------------------------------------
